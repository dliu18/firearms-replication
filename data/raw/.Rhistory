knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
## Load packages we'll use
library(tidyverse)
library(reshape2)
library(foreign)
library(ggplot2)
library(gridExtra)
library(xtable)
library(pscl)
library(mvtnorm)
# SET WORKING DIRECTORY
mywd <- "C:/Users/David/Google Drive/Senior Spring/SOC/firearms-replication"
setwd(mywd)
setwd("C:/Users/David/Google Drive/Senior Spring/SOC/firearms-replication")
getwd()
load("data/raw/Google Trends data for Figure 1.RData")
getwd()
load("/data/raw/Google Trends data for Figure 1.RData")
load("./data/raw/Google Trends data for Figure 1.RData")
setwd("C:/Users/David/Google Drive/Senior Spring/SOC/firearms-replication/data/raw")
load("Google Trends data for Figure 1.RData"")
exit
q
load("Google Trends data for Figure 1.RData")
load("Google Trends data for Figure 1.RData")
getwd()
getwd()
load("../data/raw/Google Trends data for Figure 1.RData")
head(x)
View(x)
View(x)
View(x)
google_trends <- data.frame(x[3:nrow(x),])
colnames(google_trends) <- c("week", "clean", "buy")
View(google_trends)
View(google_trends)
ggplot(google_trends) +
geom_line(aes(x = week, y = clean)) +
geom_line(aes(x = week, y = buy))
ggplot(google_trends) +
geom_line(aes(x = "week", y = "clean")) +
geom_line(aes(x = "week", y = "buy"))
ggplot(data = google_trends) +
geom_line(aes(x = week, y = clean)) +
geom_line(aes(x = week, y = buy))
google_trends <- as.numeric(google_trends)
google_trends$week <- as.numeric(google_trends$week)
google_trends$week <- as.numeric(google_trends$week)
google_trends$clean <- as.numeric(google_trends$clean)
google_trends$buy <- as.numeric(google_trends$buy)
ggplot(data = google_trends) +
geom_line(aes(x = week, y = clean)) +
geom_line(aes(x = week, y = buy))
ggplot(data = google_trends) +
geom_line(aes(x = week, y = clean), color = "black") +
geom_line(aes(x = week, y = buy), color = "red")
ggplot(data = google_trends) +
geom_line(aes(x = week, y = clean), color = "black") +
geom_line(aes(x = week, y = buy), color = "red") +
xlab("Week") +
ylab("Index Value (100 = maximum)")
min(google_trends$week)
min(google_trends$week) / 52
ggplot(data = google_trends) +
geom_line(aes(x = week, y = clean), color = "black") +
geom_line(aes(x = week, y = buy), color = "red") +
xlab("Week") +
ylab("Index Value (100 = maximum)")
ggsave("../writing/figures/fig1_original.PNG")
raw_nat_gun_sales <- read.csv("../outputs/figure_data/fig2_sales.csv")
raw_nat_gun_sales <- read.csv("../output/figure data/fig2_sales.csv")
raw_nat_gun_sales <- read.csv("../output/figure data/fig2_sales.csv")
head(raw_nat_gun_sales)
nat_gun_sales <- read.csv("../output/figure data/fig2_sales.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month/12.0)
head(nat_gun_sales)
ggplot() +
geom_line(nat_gun_sales, aes(x = year_month, y = resid))
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid))
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month/12.0)
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year_month <= 2015.833)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales <- read.csv("../output/figure data/fig2_sales.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year_month <= 2015.833)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
x <- seq(1992, 2002, by=2)
d1 <- data.frame(x=x, y=rnorm(length(x)))
xy <- expand.grid(x=x, y=x)
d2 <- data.frame(x=xy$x, y=xy$y, z= jitter(xy$x + xy$y))
p1 <-  ggplot(data = d1, mapping = aes(x = x, y = y)) +
geom_line(stat = "identity")
p2 <-  ggplot(data = d2, mapping = aes(x=x, y=y, fill=z)) +
geom_tile()
## convert plots to gtable objects
library(gtable)
library(grid) # low-level grid functions are required
g1 <- ggplotGrob(p1)
g1 <- gtable_add_cols(g1, unit(0,"mm")) # add a column for missing legend
g2 <- ggplotGrob(p2)
g <- rbind(g1, g2, size="first") # stack the two plots
g$widths <- unit.pmax(g1$widths, g2$widths) # use the largest widths
# center the legend vertically
g$layout[grepl("guide", g$layout$name),c("t","b")] <- c(1,nrow(g))
grid.newpage()
grid.draw(g)
nat_death <- read.csv("../output/figure_data/fig2_death.csv")
nat_death <- read.csv("../output/figuredata/fig2_deaths.csv")
nat_death <- read.csv("../output/figure data/fig2_deaths.csv")
nat_death
ggplot(nat_death) +
geom_bar(aes(x = year, y = resid)
ggplot(nat_death) +
ggplot(data = nat_death) +
geom_bar(aes(x = year, y = resid))
ggplot(data = nat_death) +
geom_col(aes(x = year, y = resid))
ggplot(data = nat_death) +
geom_col(aes(x = year, weight = resid))
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid))
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.5)
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417)
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4)))
df <- data.frame(x = rep(c(2.9, 3.1, 4.5), c(5, 10, 4.1)))
ggplot(data = data.frame(x = rep(nat_death$year, nat_death$resid))) +
geom_bar(aes(x = x), width = 0.417)
ggplot(data = data.frame(x = rep(nat_death$year, nat_death$resid))) +
geom_bar(aes(x), width = 0.417)
data.frame(x = rep(nat_death$year, nat_death$resid))
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417)
# set bar width to 5 months
g1 <- ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
g2 <- ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417)
g1 <- ggplot_gtable(ggplot_build(g1))
g2 <- ggplot_gtable(ggplot_build(g2))
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
grid.draw(g)
grid.draw(g)
g
grid.newpage()
# extract gtable
g1 <- ggplot_gtable(ggplot_build(g1))
p1 <- ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000))
p2 <- ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417)
# set bar width to 5 months
grid.newpage()
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
# overlap the panel of 2nd plot on that of 1st plot
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
grid.newpage()
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
# overlap the panel of 2nd plot on that of 1st plot
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# draw it
grid.draw(g)
grid.newpage()
# extract gtable
g1 <- ggplot_gtable(ggplot_build(p1))
g2 <- ggplot_gtable(ggplot_build(p2))
# overlap the panel of 2nd plot on that of 1st plot
pp <- c(subset(g1$layout, name == "panel", se = t:r))
g <- gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t,
pp$l, pp$b, pp$l)
# axis tweaks
ia <- which(g2$layout$name == "axis-l")
ga <- g2$grobs[[ia]]
ax <- ga$children[[2]]
ax$widths <- rev(ax$widths)
ax$grobs <- rev(ax$grobs)
ax$grobs[[1]]$x <- ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
g <- gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g <- gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
# draw it
grid.draw(g)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviations from Expected Monthly Firearm Sales")
p2 <- ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024))
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024))
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024)) +
ylab("Deviations from Expected Accidental Firearm Death Rates for Children")
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024)) +
ylab("Deviations from Expected AccidentalDeath Rates for Children")
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Accidental Firearm Death Rates for Children")
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales")
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales")
nat_gun_sales <- read.csv("../output/figure data/fig2_sales.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales")
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales: Pre-revision")
ggsave("../writing/figures/fig2_pre_revision.PNG")
ggsave("../writing/figures/fig2_sales.PNG")
ggsave("../writing/figures/fig2_deaths.PNG")
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales")
ggsave("../writing/figures/fig2_sales.PNG")
ggplot(data = nat_death) +
geom_bar(aes(x = year, weight = resid), width = 0.417) +
ylim(c(-0.024, 0.024)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Accidental Firearm Death Rates for Children")
ggsave("../writing/figures/fig2_deaths.PNG")
# set bar width to 5 months
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales: Pre-revision")
ggsave("../writing/figures/fig2_pre_revision.PNG")
nat_gun_sales <- read.csv("../output/figure data/fig2_sales_revised.csv")
nat_gun_sales$year_month <- nat_gun_sales$year + (nat_gun_sales$month - 1)/12.0
nat_gun_sales <- filter(nat_gun_sales, year <= 2015)
ggplot() +
geom_line(data = nat_gun_sales, aes(x = year_month, y = resid)) +
ylim(c(-1200000, 1200000)) +
ylab("Deviation") +
ggtitle("Deviations from Expected Monthly Firearm Sales")
ggsave("../writing/figures/fig2_sales.PNG")
install.packages("fiftystater")
?geom_map
require(maps)
install.packages("maps")
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
crimesm <- reshape2::melt(crimes, id = 1)
states_map <- map_data("state")
ggplot(crimes, aes(map_id = state)) +
geom_map(aes(fill = Murder), map = states_map) +
expand_limits(x = states_map$long, y = states_map$lat)
View(crimes)
library(mas)
library(maps)
tolower(rownames(USArrests))
USArrests
write.csv(crimes, file = "fig3.csv")
crimes
crimes <- data.frame(state = tolower(rownames(USArrests)), USArrests)
crimes
?write.csv
write.table(crimes, file = "fig3.csv")
getwd()
states_gun_increase <- read.csv("../outputs/figure data/fig3.csv")
states_gun_increase <- read.csv("../output/figure data/fig3.csv")
head(states_gun_increase)
?geom_map
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = total_increase), map = states_map)
states_gun_increase <- read.csv("../output/figure data/fig3.csv")
states_map <- map_data("state")
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = total_increase), map = states_map)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map, color = "black")+
expand_limits(x = states_map$long, y = states_map$lat)
ggsave("../output/figures/fig3.png")
ggsave("../writing/figures/fig3.png")
ggsave("../writing/figures/fig3_generated.png")
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map, color = "red")+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map, fill = "red")+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase, colour = "red"), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggsave("../writing/figures/fig3_generated.png")
states_map <- map_data("state")
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
ggsave("../writing/figures/fig3_generated.png")
ggplot(states_gun_increase, aes(map_id = state)) +
geom_map(aes(fill = -total_increase), map = states_map)+
expand_limits(x = states_map$long, y = states_map$lat)
